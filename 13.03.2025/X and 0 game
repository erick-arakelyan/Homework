#include <iostream>
#include <vector>

using namespace std;

const int SIZE = 3;
vector<vector<char>> board(SIZE, vector<char>(SIZE, ' '));

void printBoard() {
    cout << "  0 1 2\n";
    for (int i = 0; i < SIZE; i++) {
        cout << i << " ";
        for (int j = 0; j < SIZE; j++) {
            cout << board[i][j];
            if (j < SIZE - 1){
                cout << "|";
            } 
        }
        cout << "\n";
        if (i < SIZE - 1){
            cout << "  -----\n";
        } 
    }
}

bool isWin(char player) {
    for (int i = 0; i < SIZE; i++) {
        if (board[i][0] == player && board[i][1] == player && board[i][2] == player){
            return true;  
        }  
        if (board[0][i] == player && board[1][i] == player && board[2][i] == player){
            return true;
        }
    }
    if (board[0][0] == player && board[1][1] == player && board[2][2] == player){
        return true;
    }
    if (board[0][2] == player && board[1][1] == player && board[2][0] == player){
        return true;
    }
    else {
        return false;
    }
}

bool isDraw() {
    for (int i = 0; i < SIZE; i++)
        for (int j = 0; j < SIZE; j++)
            if (board[i][j] == ' '){
                return false;
            } 
            else {
                return true;
            }
}

int main() {
    char currentPlayer = 'X';
    int row, col;
    
    while (true) {
        printBoard();
        cout << "Player " << currentPlayer << "'s turn. Enter row and column: ";
        cin >> row >> col;
        
        if (row < 0 || row >= SIZE || col < 0 || col >= SIZE || board[row][col] != ' ') {
            cout << "Invalid move! Try again.\n";
            continue;
        }
        
        board[row][col] = currentPlayer;
        
        if (isWin(currentPlayer)) {
            printBoard();
            cout << "Player " << currentPlayer << " wins!\n";
            break;
        }
        
        if (isDraw()) {
            printBoard();
            cout << "It's a draw!\n";
            break;
        }
        
        currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
    }
    return 0;
}
